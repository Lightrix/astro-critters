var m=(...[e={}])=>{for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&e[t]===!0&&(e[t]=p[t]);const{Action:l,Cache:a,Critters:n,Exclude:u,Logger:c,Path:r}=s(p,e),o=new Set;if(typeof r<"u"&&(Array.isArray(r)||r instanceof Set))for(const t of r)o.add(t);return{name:"astro-critters",hooks:{"astro:build:done":async({dir:t})=>{if(o.size||o.add(t),typeof a=="object"&&a.Search===h&&(a.Search=t),!!n)for(const i of o)await(await(await(await new(await import("files-pipe")).default(a,c).In(i)).By("**/*.html")).Not(u)).Pipe(s(l,{Wrote:async({Buffer:f})=>{try{return new d(s(n,{path:i instanceof Map?i.keys().next().value:i,logLevel:(()=>{switch(c){case 0:return"silent";case 1:return"silent";case 2:return"info";default:return"info"}})()})).process(f.toString())}catch(y){return console.log(y),f}}}))}}}};const{default:p}=await import("../Variable/Option.js"),{default:{Cache:{Search:h}}}=await import("files-pipe/Target/Variable/Option.js"),{default:s}=await import("typescript-esbuild/Target/Function/Merge.js"),{default:d}=await import("critters");export{p as Default,s as Merge,h as Search,d as _Critters,m as default};
