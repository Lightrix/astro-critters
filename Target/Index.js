import s from"./Option/Index.js";import{fileURLToPath as c}from"url";import p from"critters";import h,{Apply as l,Merge as n}from"files-pipe";var d=(r={})=>{for(const e in r)Object.prototype.hasOwnProperty.call(r,e)&&r[e]===!0&&(r[e]=s[e]);const t=n(s,r),a=new Set;if(typeof t.Path<"u"&&(t.Path instanceof Array||t.Path instanceof Set))for(const e of t.Path)a.add(e);return{name:"astro-critters",hooks:{"astro:build:done":async({dir:e})=>{if(a.size||a.add(e),!!t.Critters)for(const f of a){const i=await l(o=>o instanceof URL?c(o):o,f);await(await(await(await new h(t.Cache,t.Logger).In(f)).By("**/*.html")).Not(t.Exclude)).Pipe(n(s.Action,{Wrote:async o=>new p(n(t.Critters,{path:i instanceof Map?i.keys().next().value:i,logLevel:(()=>{switch(t.Logger){case 0:return"silent";case 1:return"silent";case 2:return"info";default:return"info"}})()})).process(o.Buffer.toString())}))}}}}};export{d as default};
