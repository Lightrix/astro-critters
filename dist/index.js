import c from"critters";import{files as m}from"files-pipe";import l from"files-pipe/dist/lib/apply-to.js";import s from"files-pipe/dist/lib/deepmerge.js";import{fileURLToPath as d}from"url";import a from"./options/Index.js";var O=(o={})=>{for(const e in o)Object.prototype.hasOwnProperty.call(o,e)&&o[e]===!0&&(o[e]=a[e]);const t=s(a,o),i=new Set;if(typeof t.path<"u"&&(t.path instanceof Array||t.path instanceof Set))for(const e of t.path)i.add(e);return{name:"astro-critters",hooks:{"astro:build:done":async({dir:e})=>{if(i.size||i.add(e),!!t.critters)for(const p of i){const n=await l(p,r=>r instanceof URL?d(r):r),f=new c(s(t.critters,{path:n instanceof Map?n.keys().next().value:n,logLevel:(()=>{switch(t.logger){case 0:return"silent";case 1:return"silent";case 2:return"info";default:return"info"}})()}));await(await(await(await new m(t.logger).in(p)).by("**/*.html")).not(t.exclude)).pipe(s(a.pipe,{wrote:async r=>f.process(r.buffer.toString())}))}}}}};export{O as default};
